{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/patceriale/Code/Homework/google-books/client/src/pages/search/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport API from \"../../utils/API\";\nimport BookCard from \"../../components/BookCard\";\n\nfunction SearchPage() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    if (!searchTerm) return;\n    const handle = setTimeout(async () => {\n      const res = await API.searchForBooks(searchTerm);\n      setSearchResults(res.data.items.map(({\n        id,\n        volumeInfo: {\n          title,\n          authors,\n          description,\n          imageLinks: {\n            thumbnail: image\n          },\n          infoLink: link\n        }\n      }) => ({\n        id,\n        title,\n        authors,\n        description,\n        image,\n        link\n      })));\n    }, 500);\n    return () => clearTimeout(handle);\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for book\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), searchResults.map(res => /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: res.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(SearchPage, \"vFVq2CqhFvuwfi/Qub5hbBnO1R0=\");\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/patceriale/Code/Homework/google-books/client/src/pages/search/index.js"],"names":["React","useState","useEffect","API","BookCard","SearchPage","searchTerm","setSearchTerm","searchResults","setSearchResults","handle","setTimeout","res","searchForBooks","data","items","map","id","volumeInfo","title","authors","description","imageLinks","thumbnail","image","infoLink","link","clearTimeout","e","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AACA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,UAAL,EAAiB;AACjB,UAAMI,MAAM,GAAGC,UAAU,CAAC,YAAY;AACpC,YAAMC,GAAG,GAAG,MAAMT,GAAG,CAACU,cAAJ,CAAmBP,UAAnB,CAAlB;AAEAG,MAAAA,gBAAgB,CACdG,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAeC,GAAf,CACE,CAAC;AACCC,QAAAA,EADD;AAECC,QAAAA,UAAU,EAAE;AACVC,UAAAA,KADU;AAEVC,UAAAA,OAFU;AAGVC,UAAAA,WAHU;AAIVC,UAAAA,UAAU,EAAE;AAAEC,YAAAA,SAAS,EAAEC;AAAb,WAJF;AAKVC,UAAAA,QAAQ,EAAEC;AALA;AAFb,OAAD,MASO;AAAET,QAAAA,EAAF;AAAME,QAAAA,KAAN;AAAaC,QAAAA,OAAb;AAAsBC,QAAAA,WAAtB;AAAmCG,QAAAA,KAAnC;AAA0CE,QAAAA;AAA1C,OATP,CADF,CADc,CAAhB;AAcD,KAjBwB,EAiBtB,GAjBsB,CAAzB;AAkBA,WAAO,MAAMC,YAAY,CAACjB,MAAD,CAAzB;AACD,GArBQ,EAqBN,CAACJ,UAAD,CArBM,CAAT;AAsBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,KAAK,EAAEA,UAHT;AAIE,MAAA,QAAQ,EAAGsB,CAAD,IAAOrB,aAAa,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAA,gBAAIxB;AAAJ;AAAA;AAAA;AAAA;AAAA,YARF,EASGE,aAAa,CAACQ,GAAd,CAAmBJ,GAAD,iBACjB;AAAA,gBAAKA,GAAG,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA,YADD,CATH;AAAA,kBADF;AAeD;;GAxCQd,U;;KAAAA,U;AAyCT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport API from \"../../utils/API\";\nimport BookCard from \"../../components/BookCard\";\nfunction SearchPage() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    if (!searchTerm) return;\n    const handle = setTimeout(async () => {\n      const res = await API.searchForBooks(searchTerm);\n\n      setSearchResults(\n        res.data.items.map(\n          ({\n            id,\n            volumeInfo: {\n              title,\n              authors,\n              description,\n              imageLinks: { thumbnail: image },\n              infoLink: link,\n            },\n          }) => ({ id, title, authors, description, image, link })\n        )\n      );\n    }, 500);\n    return () => clearTimeout(handle);\n  }, [searchTerm]);\n  return (\n    <>\n      <h1>Search</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search for book\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <p>{searchTerm}</p>\n      {searchResults.map((res) => (\n        <h2>{res.title}</h2>\n      ))}\n    </>\n  );\n}\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}