{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/patceriale/Code/Homework/google-books/client/src/pages/search/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport API from \"../../utils/API\";\n\nfunction SearchPage() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    if (!searchTerm) return;\n    const handle = setTimeout(async () => {\n      const res = await API.searchForBooks(searchTerm);\n      console.log(res.data.items[0]);\n      setSearchResults(res.data.items);\n    }, 500);\n    return () => clearTimeout(handle);\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for book\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), searchResults.map(res => /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: res.volumeInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(SearchPage, \"vFVq2CqhFvuwfi/Qub5hbBnO1R0=\");\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/patceriale/Code/Homework/google-books/client/src/pages/search/index.js"],"names":["React","useState","useEffect","API","SearchPage","searchTerm","setSearchTerm","searchResults","setSearchResults","handle","setTimeout","res","searchForBooks","console","log","data","items","clearTimeout","e","target","value","map","volumeInfo","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACG,UAAL,EAAiB;AACjB,UAAMI,MAAM,GAAGC,UAAU,CAAC,YAAY;AACpC,YAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,cAAJ,CAAmBP,UAAnB,CAAlB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAJ,CAASC,KAAT,CAAe,CAAf,CAAZ;AACAR,MAAAA,gBAAgB,CAACG,GAAG,CAACI,IAAJ,CAASC,KAAV,CAAhB;AACD,KAJwB,EAItB,GAJsB,CAAzB;AAKA,WAAO,MAAMC,YAAY,CAACR,MAAD,CAAzB;AACD,GARQ,EAQN,CAACJ,UAAD,CARM,CAAT;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,KAAK,EAAEA,UAHT;AAIE,MAAA,QAAQ,EAAGa,CAAD,IAAOZ,aAAa,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAA,gBAAIf;AAAJ;AAAA;AAAA;AAAA;AAAA,YARF,EASGE,aAAa,CAACc,GAAd,CAAmBV,GAAD,iBACjB;AAAA,gBAAKA,GAAG,CAACW,UAAJ,CAAeC;AAApB;AAAA;AAAA;AAAA;AAAA,YADD,CATH;AAAA,kBADF;AAeD;;GA3BQnB,U;;KAAAA,U;AA4BT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport API from \"../../utils/API\";\n\nfunction SearchPage() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    if (!searchTerm) return;\n    const handle = setTimeout(async () => {\n      const res = await API.searchForBooks(searchTerm);\n      console.log(res.data.items[0]);\n      setSearchResults(res.data.items);\n    }, 500);\n    return () => clearTimeout(handle);\n  }, [searchTerm]);\n  return (\n    <>\n      <h1>Search</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search for book\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <p>{searchTerm}</p>\n      {searchResults.map((res) => (\n        <h2>{res.volumeInfo.title}</h2>\n      ))}\n    </>\n  );\n}\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}